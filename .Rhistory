nrow(s.name)
View(s.name)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
rownames(statenames) <- NULL
colnames(s.name)[1] <- 'State'
# immediately delete irrelevant first 22 and last 4 rows
statenames = statenames[-c(1:22, 88:91), , drop = FALSE]
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
rownames(statenames) <- NULL
View(s.name)
str(s.name)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(s.name)[1] <- 'State'
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
View(s.name)
str(s.name)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
View(s.name)
View(statenames)
colnames(statenames)[1] <- 'State'
View(statenames)
rownames(statenames) < NULL
rownames(statenames) <- NULL
View(statenames)
statenames = statenames[-c(1:22, 88:91), , drop = FALSE]
View(statenames)
for (i in 1:nrow(statenames)) {
if (!(grepl("\\d+\\.", s.name[i,1]))) {
statenames <- statenames[-i, ]
}
}
for (i in 1:nrow(statenames)) {
if (!(grepl("\\d+\\.", statenames[i,1]))) {
statenames <- statenames[-i, ]
}
}
nrow(statenames)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames = statenames[-c(1:22, 88:91), , drop = FALSE]
nrow(statenames)
grepl("\\d+\\.", statenames[2,1])
statenames <- statenames[!(grepl("\\d+\\.", statenames$State))]
statenames <- statenames[!(grepl("\\d+\\.", statenames$State)), ]
View(statenames)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames = statenames[-c(1:22, 88:91), , drop = FALSE]
statenames <- statenames[grepl("\\d+\\.", statenames$State), ]
View(statenames)
n = c(1,2,3,4,5)
n[n>3]
n2 <- n[n>3]
n2
str(statenames)
View(statenames)
colnames(statenames)
for (row in statenames) {print(row)}
statenames[, 1]
statenames
str(statenames)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
rownames(statenames) <- NULL
View(statenames)
str(statenames)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
View(statenames)
statenames <- statenames[-c(1:22, 88:91), , drop = FALSE]
View(statenames)
statenames <- statenames[grepl("\\d+\\.", statenames$State), ]
View(statenames)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1]
View(statenames)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
View(statenames)
cti2 = statenames[2,]
cti2
str(cti2)
str_replace_all(statenames$State, "\\d.|(tied)", "")
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d.| (tied)", '')
# scrape the name of the states
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d.|(tied)", '')
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d.|(tied)", )
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d.|(tied)", NULL)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d.|(tied)", "")
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "") %>% trimws()
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "") %>% trimws() %>% trimws()
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
final <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "") %>% trimws()
final[2]
length(final[2])
nchar(final[2])
nchar("Connecticut")
final[2] %>% trimws("right")
str(final[2] %>% trimws("right"))
state.abb[grep(final[2], state.name)]
state.name[2]
state.name[30]
state.name[31]
state.name[5]
state.name[6]
state.name[7]
grep(final[2], state.name, value = TRUE)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
final <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "") %>% str_replace_all(" ", "")
final
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
final <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)"|" ", "")
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)"|, "")
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
View(statenames)
statenames
statenames[2]
statenames[2,1]
statenames[2,1] %>% trimws()
statenames[2,1] %>% trimws() %>% trimws("right")
statenames[2,1] %>% trimws() %>% trimws()
length("Connecticut ")
nchar("Connecticut ")
beer_states
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
statenames
# scrape the name of the states
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "") %>% sub("^\\s+","")
statenames
# scrape the name of the states
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
statenames
statenames[2,1]
statenames[2,1] %>% gsub("(^\\s+)|(\\s+$)", "")
gsub("(^\\s+)|(\\s+$)", "", statenames[2,1])
Encoding(statenames[2,1])
gub(" ", "", statenames[2,1])
gsub(" ", "", statenames[2,1])
gsub("\\s", "", statenames[2,1])
gsub("\\s", "", statenames[12,1])
gsub("\\s", "", statenames[13,1])
gsub("\\s", "", statenames[14,1])
gsub("\\s", "", statenames[17,1])
gsub("\\s", "", statenames[23,1])
gsub("\\s", "", statenames[22,1])
gsub("\\s", "", statenames[20,1])
View(statenames)
gsub("\\s", "", statenames[5,1])
gsub("\\s$", "", statenames[5,1])
gsub("^\\s$", "", statenames[5,1])
gsub("\\s^|\\s$", "", statenames[5,1])
gsub("^\\s|\\s$", "", statenames[5,1])
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "tied"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
# remove spaces before or after name
statenames$State <- str_replace_all(statenames$State, "^\\s|\\s$", "")
statenames
statenames[5,1]
rownames(statenames) <- NULL
statenames
str(national_consum)
state.abb[grep(statenames$State, state.name)]
state.abb[grep(c(statenames$State), state.name)]
for (i in 1:nrow(statenames) {
statenames$State[i] <- state.abb(grep(statenames$State[i], state.name))
}
for (i in 1:nrow(statenames) {
statenames$State[i] <- state.abb[grep(statenames$State[i], state.name)]
}
for (i in 1:nrow(statenames)) {
statenames$State[i] <- state.abb[grep(statenames$State[i], state.name)]
}
statenames$State[1]
statenames$State[2]
statenames$State[4]
View(statenames)
statenames[6,1]
state.abb[grep(statenames[6,1], state.name)]
statenames$State[1]
statenames$State[5]
statenames$State[6]
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- beer_states <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "(tied)"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
# remove spaces before or after name
statenames$State <- str_replace_all(statenames$State, "^\\s|\\s$", "")
rownames(statenames) <- NULL
# convert to abbreviations
for (i in 1:nrow(statenames)) {
statenames$State[i] <- state.abb[grep(statenames$State[i], state.name)]
}
View(statenames)
statenames$State[5]
national_consum <- cbind(national_consum, statenames)
View(national_consum)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "(tied)"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
# remove spaces before or after name
statenames$State <- str_replace_all(statenames$State, "^\\s|\\s$", "")
rownames(statenames) <- NULL
# convert to abbreviations using state.name and state.abb built-ins
for (i in 1:nrow(statenames)) {
statenames$State[i] <- state.abb[grep(statenames$State[i], state.name)]
}
# merge statenames and national_consum
national_consum <- cbind(national_consum, statenames)
View(national_consum)
scraping_beer <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
national_consum <- scraping_beer %>% html_nodes("ul") %>% html_text() %>% data.frame()
colnames(national_consum)[1] <- "Total Consumption"
# remove first four rows (irrelevant info)
# use drop = FALSE since there's only 1 column
national_consum <- national_consum[-c(1:4), , drop = FALSE]
# change column from factor to string (character)
national_consum$`Total Consumption` <- as.character(national_consum$`Total Consumption`)
beer_values = c() # holds the actual consumption values
for (row in national_consum){
total_consum <- substring(row, first = str_locate(cti, "Total")[1], last = str_locate(row, "5 yr.")[1] - 1)
total_consum_numeric <- regmatches(total_consum, regexpr('\\d+\\.+\\d', total_consum)) %>% as.numeric()
beer_values <- c(beer_values, total_consum_numeric)
}
beer_values
# make the beer values the column values of nationa_consum
national_consum$`Total Consumption` <- beer_values
# remove row names bc of improper numbering
rownames(national_consum) <- NULL
View(national_consum)
scraping_states <- read_html("https://www.usatoday.com/story/money/personalfinance/2018/05/02/which-states-residents-drink-most-beer/569430002/")
statenames <- scraping_states %>% html_nodes("p") %>% html_text() %>% data.frame()
# remove row names
colnames(statenames)[1] <- 'State'
statenames$State <- as.character(statenames$State)
rownames(statenames) <- NULL
# immediately delete irrelevant first 22 and last 4 rows
statenames <- statenames[-c(1:22, 88:91), 1, drop = FALSE]
# first isolate rows similar in format to "46. New York"
statenames <- statenames[grepl("\\d+\\.", statenames$State), , drop = FALSE]
# remove list numbers and "(tied)"
statenames$State <- str_replace_all(statenames$State, "\\d+\\.|\\(+tied+\\)", "")
# remove spaces before or after name
statenames$State <- str_replace_all(statenames$State, "^\\s|\\s$", "")
rownames(statenames) <- NULL
# convert to abbreviations using state.name and state.abb built-ins
for (i in 1:nrow(statenames)) {
statenames$State[i] <- state.abb[grep(statenames$State[i], state.name)]
}
# merge statenames and national_consum
national_consum <- cbind(national_consum, statenames)
View(national_consum)
merge(national_consum, beer_landscape, by = 'State')
merge(national_consum, beer_landscape, by = 'State')
merge(national_consum, beer_landscape, by = 'State')
beer_landscape <- Brewtot %>% group_by(State) %>% summarise(Beers = length(Beer)) %>% cbind(brewers %>% group_by(State) %>% summarise(`Total Brewers` = length(State)) %>% select(`Total Brewers`)) %>% arrange(desc(`Total Brewers`))
kable(beer_landscape, align = rep('c',3)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
merge(national_consum, beer_landscape, by = 'State')
merge(national_consum, beer_landscape, by = 'State') %>% kable(align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
kable(complete_beer_landscape, align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
complete_beer_landscape <- merge(national_consum, beer_landscape, by = 'State')
# format
kable(complete_beer_landscape, align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
print(kable(complete_beer_landscape, align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F))
kable(complete_beer_landscape, align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
kable(beer_landscape, align = rep('c',3)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
kable(complete_beer_landscape, align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
sessionInfo()
complete_beer_landscape
str(complete_beer_landscape)
complete_beer_landscape <- merge(national_consum, beer_landscape, by = 'State')
complete_beer_landscape
complete_beer_landscape <- merge(national_consum, beer_landscape, by = 'State')
complete_beer_landscape
str(complete_beer_landscape)
kable(complete_beer_landscape, align = rep('c',4)) %>% kable_styling(bootstrap_options = "striped", full_width = F)
money
money = data.frame(Money = c(10,20,20), People = c('a',"B","c"))
money
